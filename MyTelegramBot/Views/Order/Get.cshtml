@model Tuple<MyTelegramBot.Orders,List<MyTelegramBot.OrderHistory>> 

@{
    ViewData["Title"] = "Get";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<!-- Nav tabs -->
<div>
    <ul class="nav nav-tabs">
        <li class="active"><a href="#main" data-toggle="tab">Основная информация</a></li>
        <li><a href="#history" data-toggle="tab">История обработки заказа</a></li>
        <li><a href="#work" data-toggle="tab">История перемещений между пользователями</a></li>
        @if (Model.Item1.FeedBack != null)
        {
            <li><a href="#feedback" data-toggle="tab">Отзыв</a></li>

        }

    </ul>


<!-- Tab panes -->
    <div class="tab-content">
        <div class="tab-pane active" id="main">
            <div class="row">
                @if (Model.Item1.Done != null)
                {
                    <h3 class="bg-success">Заказ выполнен. @Model.Item1.Done.Timestamp</h3>

                }

                @if ( Model.Item1.Delete != null)
                {
                    <h3 class="bg-danger">Заказ Удален</h3>
                    <h3 class="bg-danger">Комментарий : @Model.Item1.Delete.Text</h3>
                    <h3 class="bg-danger">Время: @Model.Item1.Delete.Timestamp</h3>

                }

                @if (Model.Item1.Confirm != null && Model.Item1.Done == null && Model.Item1.Delete == null)
                {
                    <h3 class="bg-info">Заказ согласован</h3>
                    <h3 class="bg-info">Комментарий : @Model.Item1.Confirm.Text </h3>
                    <h3 class="bg-info">Время @Model.Item1.Confirm.Timestamp</h3>

                }
                <div class="col-md-6">
                    <input type="hidden" name="Id" id="Id" value="@Model.Item1.Id" />
                    <h4>Заказ № @Model.Item1.Number</h4>
                    <p>
                        <label>Время:</label>
                        @Html.DisplayFor(m => m.Item1.DateAdd)
                    </p>

                    <p>
                        <label>Стоимость заказа:</label>
                        @ViewBag.TotalPrice
                    </p>
                    
                        @if (Model.Item1.OrderAddress != null)
                        {
                            <p>
                                <label>
                                    Адрес доставки:
                                </label>
                                @Html.DisplayName(Model.Item1.OrderAddress.Adress.House.Street.City.Name + ", " + Model.Item1.OrderAddress.Adress.House.Street.Name + ", " + Model.Item1.OrderAddress.Adress.House.Number)
                            </p>

                            <p>
                                <label>Стоимость доставки:</label>
                                @Html.DisplayName(Model.Item1.OrderAddress.ShipPriceValue.ToString())
                            </p>

                        }

                        @if (Model.Item1.PickupPoint != null)
                        {
                            <p>
                                <label>Пункт самовывоза</label>
                                @Html.DisplayName(Model.Item1.PickupPoint.Name)
                            </p>

                        }
                    <p>

                    </p>

                    <p>
                        <label>
                            Пользователь:
                        </label>
                        <a href=@("https://t.me/"+ Model.Item1.Follower.UserName)>@(@Model.Item1.Follower.FirstName + " " + @Model.Item1.Follower.LastName)</a>
                    </p>
                    <p>
                        <label>
                            Комментарий к заказу:
                        </label>
                        @Html.DisplayFor(m => m.Item1.Text)
                    </p>
                </div>
                <div class="col-md-6">
                    @if (Model.Item1.Invoice != null)
                    {
                        <div>
                            <h4>Счет на оплату </h4>
                            <p>
                                <label>Сумма:</label>
                                @Html.DisplayName(Model.Item1.Invoice.Value.ToString())
                            </p>
                            <p>
                                <label>
                                    Способ оплаты
                                </label>
                                @Html.DisplayFor(m => m.Item1.Invoice.PaymentType.Name)
                            </p>
                            <p>
                                <label>
                                    Адрес счета получателя:
                                </label>
                                @Html.DisplayFor(m => m.Item1.Invoice.AccountNumber)
                            </p>
                            <p>
                                <label>
                                    Комментарий к платежу
                                </label>
                                @Html.DisplayFor(m => m.Item1.Invoice.Comment)
                            </p>
                            <p>
                                <label>
                                    Оплатить не позднее
                                </label>
                                @Model.Item1.Invoice.CreateTimestamp.Value.AddHours(@Model.Item1.Invoice.InvoiceNumber.Value)
                            </p>
                            <p>
                                <label>
                                    Оплачен:
                                </label>
                               @Html.CheckBoxFor(m => m.Item1.Invoice.Paid)
                            </p>
                        </div>
                    }
                </div>

            </div>

            <div class="row">
            </div>
            <div class="col-md-2"><button type="button" id="InWorkBtn" class="btn btn-success btn-block" onclick="ajaxTakeOrderInWork();">Взять в работу</button></div>

            <!-- Кнопки обработки заказа -->

            <div class="col-md-2">
                <a class="btn btn-success btn-block disabled"
                   href="#" data-toggle="modal"
                   data-target="#basicModal" id="ConfirmBtn">Заказ согласован</a>
            </div>

            <div class="col-md-2">
                <a class="btn btn-success btn-block disabled" id="DoneBtn" onclick="ajaxAddHistory('2');">Заказ выполнен</a>
            </div>

            <div class="col-md-2">
                <a class="btn btn-danger btn-block disabled"
                   href="#" data-toggle="modal"
                   data-target="#DeleteModal" id="DelBtn">Удалить</a>
            </div>

            <div class="col-md-2">
                <a class="btn btn-warning  btn-block disabled" id="RecoveryBtn" onclick="ajaxAddHistory('4');">Восстановить заказ</a>
            </div>
            <!-- Кнопки обработки заказа -->

            <div>
                <hr />
                <h2>Состав заказа</h2>
                <table class="table">
                    <tr>
                        <td>Товар</td>
                        <td>Цена</td>
                        <td>Количество</td>
                        <td>Итого</td>
                    </tr>
                    @foreach (var item in Model.Item1.OrderProduct)
                    {
                        <tr>
                            <td><a href="~/Product/Editor/@item.ProductId">@item.Product.Name</a></td>
                            <td>@(@item.Price.Value.ToString() + " " + @item.Price.Currency.ShortName)</td>
                            <td>@item.Count</td>
                            <td>@((@item.Count * @item.Price.Value).ToString() + " " + item.Price.Currency.ShortName)</td>
                        </tr>
                    }
                </table>
            </div>

            @Html.Hidden("TmpInWork", "false") <!--В работе у тек. пользователя - TRUE, нет - False -->

            @if (Model.Item1.Confirm != null)
            {
                <input type="hidden" name="Confirmed" id="Confirmed" value="true" /> <!--заказ согласован -->

            }

            @if (Model.Item1.Confirm == null)
            {
                <input type="hidden" name="Confirmed" id="Confirmed" value="false" /> <!--заказ не согласован -->

            }

            @if (Model.Item1.Delete != null)
            {
                <input type="hidden" name="Deleted" id="Deleted" value="true" /> <!--заказ удален -->

            }

            @if (Model.Item1.Delete == null)
            {
                <input type="hidden" name="Deleted" id="Deleted" value="false" /> <!--заказ не удален -->

            }

            @if (Model.Item1.Done != null)
            {
                <input type="hidden" name="Done" id="Done" value="true" /> <!--выполнен-->

            }

            @if (Model.Item1.Done == null)
            {
                <input type="hidden" name="Done" id="Done" value="false" /> <!--не  выполнен-->

            }


        </div>

        <div class="tab-pane" id="history">
                <table class="table">
                    <thead>
                        <tr>   
                            <td>Действие</td>
                            <td>Комментарий</td>
                            <td>Пользователь</td>
                            <td>Время</td>
                            
                        </tr>
                    </thead>
                    <tbody class="_history_table">

                            @foreach (var history in Model.Item2)
                            {
                                <tr>
                                    <td>@history.Action.Name</td>
                                    <td>@history.Text</td>
                                    <td><a href=@("https://t.me/"+ history.Follower.UserName)>@(@history.Follower.FirstName + " " + @history.Follower.LastName)</a></td>
                                    <td>@history.Timestamp</td>
                                </tr>
                            }
                        

                    </tbody>
                </table>            
        </div>

        <div class="tab-pane" id="work">
            @if (Model.Item1.OrdersInWork != null)
            {
                <table class="table">
                    <thead>
                        <tr>
                            <td>Пользователь</td>
                            <td>Время</td>
                            <td>В работе</td>
                        </tr>
                    </thead>
                    <tbody class="_work_table">
                        @foreach (var work in Model.Item1.OrdersInWork)
                        {
                            <tr>
                                <td><a href=@("https://t.me/"+ work.Follower.UserName)>@(@work.Follower.FirstName + " " + @work.Follower.LastName)</a></td>
                                <td>@work.Timestamp</td>
                                <td>@work.InWork</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>

        <div class="tab-pane" id="feedback">
            @if (Model.Item1.FeedBack != null)
            {
                <h3>@Model.Item1.FeedBack.DateAdd</h3>
                <blockquote>@Model.Item1.FeedBack.Text </blockquote>
                <h4>Оценка: @Model.Item1.FeedBack.RaitingValue</h4>


            }
        </div>

    </div>
</div>
<!-- Tab panes -->


<!--Модальное окно для добавления комментария о том что заказ согласован-->
<div class="modal fade" id="basicModal" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button class="close" type="button" data-dismiss="modal">x</button>
                <h4 class="modal-title" id="myModalLabel">Согласование заказа</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("", ""))
                {
                    <label>Введите комментарий</label> <br />
                        @Html.TextArea("TextConfirm", new { style = "min-width: 100%" })


                }
            </div>
            <div class="modal-footer">
                <button class="btn btn-default" type="button" data-dismiss="modal">Закрыть</button>
                <button class="btn btn-primary" type="button" data-dismiss="modal" onclick="ajaxAddHistory('1', $('#TextConfirm').val());">Сохранить изменения</button>
            </div>
        </div>
    </div>
</div>
<!--Модальное окно для добавления комментария о том что заказ согласован-->


<!--Модальное окно для добавления комментария о том что заказ Удален-->
<div class="modal fade" id="DeleteModal" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button class="close" type="button" data-dismiss="modal">x</button>
                <h4 class="modal-title" id="myModalLabel">Удаление заказа</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("", ""))
                {
                    <label>Причина удаления</label> <br />
                        @Html.TextArea("TextDelete", new { style = "min-width: 100%" })


                }
            </div>
            <div class="modal-footer">
                <button class="btn btn-default" type="button" data-dismiss="modal">Закрыть</button>
                <button class="btn btn-primary" type="button" data-dismiss="modal" onclick="ajaxAddHistory('3', $('#TextDelete').val());">Удалить</button>
            </div>
        </div>
    </div>
</div>
<!--Модальное окно для добавления комментария о том что заказ Удален-->

<!--Функция взять заказ  в обработку-->
<script type="text/javascript">

    function ajaxTakeOrderInWork() {
        var work = false;

        if ($('#TmpInWork').val() == "false")
            work = true;

        else
            work = false;

        var Config = {
            'OrderId': $("#Id").val(),
            'InWork': work
        }

        $.ajax({
            type: "POST",
            url: '/Order/TakeInWork',
            data: JSON.stringify(Config),
            contentType: "application/json; charset=utf-8",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            dataType: "json"
        }).done(function (data) {
            console.info(data);
            if (data === "В работе" && $('#TmpInWork').val() == "false") { // Пользователь берет заявку в обработку

                $('#TmpInWork').val('true'); //
                $('#InWorkBtn').text('Освободить');
                getTakeInWork(); // запрос табличных данных

                if ($('#Confirmed').val() == "false")
                {
                    $('#ConfirmBtn').removeClass('disabled');
                }

                // пользоветль взял заказ в обработку, но он уже согласован   значит делаем кнопку "Выполнить" актвной
                if ($('#Confirmed').val() == "true")
                {
                    $('#DoneBtn').removeClass('disabled');
                }

                //// если заказ не удален то делаем кнопку удалить заказ активной
                if ($('#Deleted').val() == "false")
                {        
                    $('#DelBtn').removeClass('disabled');
                }


                //// если заказ  удален то делаем кнопку Восстановить заказ активной
                if ($('#Deleted').val() == "true")
                {
                    $('#RecoveryBtn').removeClass('disabled')
                    $('#ConfirmBtn').addClass('disabled');
                }

                if ($('#Done').val() == "true")
                {
                    $('#DoneBtn').addClass('disabled');
                    $('#ConfirmBtn').addClass('disabled');
                   $('#RecoveryBtn').addClass('disabled');
                    $('#DelBtn').addClass('disabled')
                }

            }
            if (data === "Свободна" && $('#TmpInWork').val() == "true") { // Пользователь освобождает заявку

                $('#TmpInWork').val('false');
                $("#Example").val(data);
                $('#InWorkBtn').text('Взять в работу');
                $('#ConfirmBtn').addClass('disabled');
                $('#DoneBtn').addClass('disabled');
                $('#DelBtn').addClass('disabled');
                $('#RecoveryBtn').addClass('disabled');
                // запрос табличных данных
            }

            getTakeInWork();

            //$("#Example").val(data);
        }).error(function (data) {
            // если с ответом сервера чтото пошло не так...
        })
    }

    function getTakeInWork() {
        $.ajax({
            type: "Get",
            url: '/Order/GetInWorkList?Id=' + $("#Id").val(), //
            contentType: "application/json; charset=utf-8",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            dataType: "json"
        }).done(function (data) {

            let tableDraw = '';
            try {
                // let tableDataJson = JSON.parse(data);
                data.forEach(function (elem) {
                    tableDraw += '<tr>';
                    tableDraw += '<td>' + elem.name + '</td>';
                    tableDraw += '<td>' + elem.Timestamp + '</td>';
                    tableDraw += '<td>' + elem.InWork + '</td>';
                    tableDraw += '</tr>';
                });
                $('._work_table').html(tableDraw);
                console.log(data);
            } catch (e) {


            }

        }).error(function (data) {
            // если с ответом сервера чтото пошло не так...
        })


    }
</script>


    <!--Функция "AddHistory"-->
<script type="text/javascript">

    function ajaxAddHistory(ActionId, Text) {

        var Config = {
            'OrderId': $("#Id").val(),
            'Text': Text,
            'ActionId': ActionId,
        }

        $.ajax({
            type: "POST",
            url: '/Order/AddHistory',
            data: JSON.stringify(Config),
            contentType: "application/json; charset=utf-8",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            dataType: "json"
        }).done(function (data) {
            console.info(data);

            if (data === "Согласовано" && ActionId == '1') { // Пользователь добавляет запись о том что заказ согласован
                $('#DoneBtn').removeClass('disabled');
                $('#Confirmed').val('true'); //
                $("#Example").val(data);
                getHistory();
            }

            if (data == "Выполнено" && ActionId == '2') {

                $('#DelBtn').addClass('disabled');
                $('#ConfirmBtn').addClass('disabled');
                $('#RecoveryBtn').addClass('disabled');
                $('#DoneBtn').addClass('disabled');
                $('Done').val('true');
                getHistory();
            }

            if (data === "Удалено" && ActionId == '3') { // Пользователь добавляет запись о том что заказ согласован
                $('#DoneBtn').addClass('disabled');
                $('#ConfirmBtn').addClass('disabled');
                $('#RecoveryBtn').removeClass('disabled');
                $('#DelBtn').addClass('disabled');
                $('Deleted').val('true');
                getHistory();
                console.log(data);

            }
            if (data === "Восстановлено" && ActionId == '4') {
                $('#ConfirmBtn').removeClass('disabled');
                $('#RecoveryBtn').addClass('disabled');
                $('#DelBtn').removeClass('disabled')
                $('Deleted').val('false');

                if ($('#Confirmed').val() == "True")
                    $('#DoneBtn').removeClass('disabled');
                getHistory();
                console.log(data);
            }

            

            else {
                console.log(data);
                alert(data);
            }
            //$("#Example").val(data);
        }).error(function (data) {
            // если с ответом сервера чтото пошло не так...
        })
    }

    function getHistory() {
        $.ajax({
            type: "Get",
            url: '/Order/GetHistoryList?Id=' + $("#Id").val(), //
            contentType: "application/json; charset=utf-8",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            dataType: "json"
        }).done(function (data) {

            let tableDraw = '';
            try {
                // let tableDataJson = JSON.parse(data);
                data.forEach(function (elem) {
                    tableDraw += '<tr>';
                    tableDraw += '<td>' + elem.ActionName + '</td>';
                    tableDraw += '<td>' + elem.Text + '</td>';
                    tableDraw += '<td>' + elem.UserName + '</td>';
                    tableDraw += '<td>' + elem.Timestamp + '</td>';                    
                    tableDraw += '</tr>';
                });
                $('._confirm_table').html(tableDraw);
                console.log(data);
            } catch (e) {


            }

        }).error(function (data) {
            // если с ответом сервера чтото пошло не так...
        })


    }
</script>
